/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UIClient;

import TCPClient.ReceiveMessageFromOtherUserThread;
import TCPClient.ReceiveMessageOnlineUsersThread;
import java.net.Socket;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import javax.swing.DefaultListModel;

/**
 *
 * @author DUNG BUI
 */
public class MainScreenJFrame extends javax.swing.JFrame {
    Socket ss = null;
    String username;
    List<String> onlineUserList;
    HashMap<String, ScreenChatJInternalFrame> chatwindows;
//    HashMap<String, ScreenChatJFrame> chatwindows;
    HashMap<String, javax.swing.JTextArea> showChatOnScreenHashMap;
    
    
    DefaultListModel listModel = null;
//    HashMap<String, ScreenChatJPanel> chatwindows;

    /**
     * Creates new form MainScreenJFrame
     * @param s
     * @param userName
     */
    public MainScreenJFrame(Socket s, String userName) {
        initComponents();
        this.ss = s;
        this.username = userName;
        this.chatwindows = new HashMap<>();
        this.showChatOnScreenHashMap = new HashMap<>();
        load();
    }
    
    private void load(){
//        jListUserOnline.removeAll();
        onlineUserList = new ArrayList<>();
        new ReceiveMessageOnlineUsersThread(ss, onlineUserList).start();
        new ReceiveMessageFromOtherUserThread(ss, username, chatwindows, showChatOnScreenHashMap, jDesktopPane1).start();
        
        
        listModel = new DefaultListModel();
        for (String string : onlineUserList) {
            listModel.addElement(string);
        }
        this.jListUserOnline.setModel(listModel);
        
        this.jMenuPersonal.setText(username);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanelUserOnlineList = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListUserOnline = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jButtonRenew = new javax.swing.JButton();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuPersonal = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanelUserOnlineList.setBackground(new java.awt.Color(180, 176, 237));

        jListUserOnline.setBackground(new java.awt.Color(102, 102, 255));
        jListUserOnline.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jListUserOnline.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListUserOnline.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListUserOnlineMouseClicked(evt);
            }
        });
        jListUserOnline.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListUserOnlineValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListUserOnline);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Chat");

        jButtonRenew.setBackground(new java.awt.Color(153, 255, 153));
        jButtonRenew.setText("Renew");
        jButtonRenew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRenewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelUserOnlineListLayout = new javax.swing.GroupLayout(jPanelUserOnlineList);
        jPanelUserOnlineList.setLayout(jPanelUserOnlineListLayout);
        jPanelUserOnlineListLayout.setHorizontalGroup(
            jPanelUserOnlineListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelUserOnlineListLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelUserOnlineListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanelUserOnlineListLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonRenew, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanelUserOnlineListLayout.setVerticalGroup(
            jPanelUserOnlineListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelUserOnlineListLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelUserOnlineListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(jButtonRenew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
                .addContainerGap())
        );

        jDesktopPane1.setBackground(new java.awt.Color(157, 177, 235));

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 583, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 534, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanelUserOnlineList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDesktopPane1))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelUserOnlineList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jDesktopPane1)
        );

        jMenuBar1.setBackground(new java.awt.Color(51, 51, 255));

        jMenuPersonal.setText("Name");

        jMenuItem1.setText("Log out");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenuPersonal.add(jMenuItem1);

        jMenuBar1.add(jMenuPersonal);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jListUserOnlineValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListUserOnlineValueChanged
        // TODO add your handling code here:
//        String value = this.jListUserOnline.getSelectedValue();
//        System.out.println(value);
    }//GEN-LAST:event_jListUserOnlineValueChanged

    private void jListUserOnlineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListUserOnlineMouseClicked
        // TODO add your handling code here:
        String receiveperson = this.jListUserOnline.getSelectedValue();
        
        //setVisible cac jinternalframe khac false
//        for(Map.Entry<String, ScreenChatJInternalFrame> entry : chatwindows.entrySet()){
//                entry.getValue().setVisible(false);
//            }
        
        if(chatwindows.containsKey(receiveperson)){
            chatwindows.get(receiveperson).setVisible(true);
        }else{
            ScreenChatJInternalFrame scjif = new ScreenChatJInternalFrame(ss, username, receiveperson, chatwindows, showChatOnScreenHashMap, this.jDesktopPane1);
            this.jDesktopPane1.add(scjif);
            scjif.setVisible(true);
            chatwindows.put(receiveperson, scjif);
//            ScreenChatJFrame scjf = new ScreenChatJFrame(ss, username, receiveperson, chatwindows, showChatOnScreenHashMap);
//            scjf.setVisible(true);
//            chatwindows.put(receiveperson, scjf);
        }

//        for(Map.Entry<String, ScreenChatJPanel> entry : chatwindows.entrySet()){
//            entry.getValue().setVisible(false);
//        }
        
//        if(chatwindows.containsKey(receiveperson)){
//            chatwindows.get(receiveperson).setVisible(true);
//        }else{
//            ScreenChatJPanel scjp = new ScreenChatJPanel(ss, username, receiveperson, chatwindows);
//            if(scjp == null)
//                System.out.println("khong tao duoc man hinh");
//            else
//                System.out.println("tao duoc man hinh");
//            this.jPanelContent.add(scjp);
//            scjp.setVisible(true);
//            chatwindows.put(receiveperson, scjp);
//        }
    }//GEN-LAST:event_jListUserOnlineMouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButtonRenewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRenewActionPerformed
        // TODO add your handling code here:
        this.onlineUserList.remove(this.username);
//        DefaultListModel listModel = new DefaultListModel();
        listModel.clear();
        for (String string : onlineUserList) {
            listModel.addElement(string);
        }
        
        this.jListUserOnline.setModel(listModel);
    }//GEN-LAST:event_jButtonRenewActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(MainScreenJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(MainScreenJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(MainScreenJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(MainScreenJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new MainScreenJFrame().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonRenew;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jListUserOnline;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenu jMenuPersonal;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelUserOnlineList;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
